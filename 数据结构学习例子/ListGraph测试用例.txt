#include <iostream>
#include "ListGraph.h"

using namespace std;
using namespace MyLib;

int main()
{
    ListGraph<char, int> g;

    g.addVertex('A');
    g.addVertex('B');
    g.addVertex('C');
    g.addVertex('D');


    for(int i=0; i<g.vertexCount(); i++)
    {
        cout << i << " : " << g.getVertex(i) << endl;
    }

        g.setEdge(0, 1, 5);
        g.setEdge(0, 3, 5);
        g.setEdge(1, 2, 8);
        g.setEdge(2, 3, 2);
        g.setEdge(3, 1, 9);

        cout << "weight(0, 1): " << g.getEdge(0, 1) << endl;
        cout << "weight(0, 3): " << g.getEdge(0, 3) << endl;
        cout << "weight(1, 2): " << g.getEdge(1, 2) << endl;
        cout << "weight(2, 3): " << g.getEdge(2, 3) << endl;
        cout << "weight(3, 1): " << g.getEdge(3, 1) << endl;

        cout << "edgeCount: " << g.edgeCount() << endl;

        // g.removeEdge(3, 1);

        cout << "edgeCount: " << g.edgeCount() << endl;

        SharedPointer<Array<int>> aj = g.getAdjacent(0);

        for(int i=0; i<aj->length(); i++)
        {
            cout << (*aj)[i] << endl;
        }

        cout << "ID(1): " << g.ID(1) << endl;
        cout << "OD(1): " << g.OD(1) << endl;
        cout << "TD(1): " << g.TD(1) << endl;

        cout << endl;

    return 0;
}
