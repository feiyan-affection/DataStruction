#include <iostream>
#include <exception.h>
#include <string>
#include "SmartPointer.h"
#include "Exception.h"
#include "Object.h"
#include "List.h"

using namespace std;
using namespace MyLib;

class Test : public Object
{
public:
    int i;
    int j;
};

class Child : public Test
{
public:
    int k;
};

int main()
{
    /**********************************************************/
//    SmartPointer<Test> sp = new Test();
//    SmartPointer<Test> nsp;

//    nsp = sp;

//    cout << sp.isNull() << endl;
//    cout << nsp.isNull() << endl;
    /***********************************************************/
//    try
//    {
//        // throw Exception("Test", __FILE__, __LINE__);
//        THROW_EXCEPTION(ArithmeticException, "Test");
//        throw 1;
//    }
//    catch(const ArithmeticException& e)
//    {
//        cout << "catch(const ArithmeticException& e)" << endl;
//        cout << e.message() << endl;
//        cout << e.location() << endl;
//    }
//    catch(const Exception& e)
//    {
//        cout << "catch(const Exception& e)" << endl;
//        cout << e.message() << endl;
//        cout << e.location() << endl;
//    }
    /***************************************************************/

//    Object* obj1 = new Test();
//    Object* obj2 = new Child();

//    cout << "obj1 = " << obj1 << endl;
//    cout << "obj2 = " << obj2 << endl;

//    delete obj1;
//    delete obj2;
//    /*********************************************************************/

//    SmartPointer<int>* sp = new SmartPointer<int>();
//    delete sp;

    /**************************************************************/

    List<int>* l = NULL;
    return 0;
}
